[{"/Users/torrencebrown/Projects/react_playground/flight-booking/src/index.js":"1","/Users/torrencebrown/Projects/react_playground/flight-booking/src/reportWebVitals.js":"2","/Users/torrencebrown/Projects/react_playground/flight-booking/src/App.js":"3","/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/UI/Navigation/Nav.js":"4","/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/UI/Footer/Footer.js":"5","/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/UI/Booking/Booking.js":"6","/Users/torrencebrown/Projects/react_playground/flight-booking/src/api/flight-client.js":"7","/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/Utility/AutoComplete/Autocomplete.js":"8","/Users/torrencebrown/Projects/react_playground/flight-booking/src/api/endpoints.js":"9"},{"size":500,"mtime":1609953019881,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609953019881,"results":"12","hashOfConfig":"11"},{"size":320,"mtime":1609953019860,"results":"13","hashOfConfig":"11"},{"size":269,"mtime":1609953019880,"results":"14","hashOfConfig":"11"},{"size":210,"mtime":1609953019879,"results":"15","hashOfConfig":"11"},{"size":3738,"mtime":1611883519247,"results":"16","hashOfConfig":"11"},{"size":1372,"mtime":1612244615756,"results":"17","hashOfConfig":"11"},{"size":250,"mtime":1610517363268,"results":"18","hashOfConfig":"11"},{"size":177,"mtime":1612244572167,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"i66jtr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/torrencebrown/Projects/react_playground/flight-booking/src/index.js",[],["41","42"],"/Users/torrencebrown/Projects/react_playground/flight-booking/src/reportWebVitals.js",[],"/Users/torrencebrown/Projects/react_playground/flight-booking/src/App.js",[],"/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/UI/Navigation/Nav.js",[],"/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/UI/Footer/Footer.js",[],"/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/UI/Booking/Booking.js",["43","44"],"import React, { useState, useCallback } from \"react\";\nimport \"./booking.css\";\nimport backgroundImage from \"./background.jpg\";\nimport flightClient from \"../../../api/flight-client\";\nimport Autocomplete from \"../../Utility/AutoComplete/Autocomplete\";\n\nconst Booking = () => {\n  const [trip, setTrip] = useState({\n    destination: \"\",\n    placeId: \"\",\n  });\n  const [suggestions, setSuggestions] = useState([]);\n\n  const debounce = (callback, rate) => {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        callback(...args);\n      }, rate);\n    };\n  };\n\n  const handler = useCallback(\n    debounce(\n      (query) =>\n        flightClient({\n          query: query,\n          setSuggestions: setSuggestions,\n        }),\n      2000\n    ),\n    []\n  );\n\n  let onChangeHandler = (e) => {\n    let selectedPlace =\n      suggestions.length >= 1\n        ? suggestions.find((suggestion) => {\n            if (suggestion.destination === e.target.value) {\n              return true;\n            } else {\n              return false;\n            }\n          })\n        : \"\";\n    handler(e.target.value);\n    setTrip((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n      placeId: selectedPlace?.placeId,\n    }));\n  };\n\n  let onClickHandler = (e) => {\n    e.preventDefault();\n    setTrip({\n      destination: \"\",\n      destinationPlaceId: \"\",\n    });\n    setSuggestions([]);\n  };\n\n  return (\n    console.log(\"Trip: \", trip),\n    (\n      <div\n        className=\"booking\"\n        style={{\n          backgroundImage: `url(${backgroundImage})`,\n        }}\n      >\n        <div className=\"booking__form-container\">\n          <h3>WHERE DO YOU WANT TO GO?</h3>\n          <form className=\"booking__form\">\n            {/* ToDo: Refactor inputs into single component */}\n            {/* Todo: Find better alternative \n              for implementing an autosuggest. \n              datalist element has bad support...\n          */}\n            {/* <input\n            autoComplete=\"off\"\n            list=\"origins\"\n            type=\"text\"\n            placeholder=\"ORIGIN?\"\n            name=\"origin\"\n            value={trip.origin || \"\"}\n            onChange={onChangeHandler}\n          />\n          <datalist id=\"origins\">\n            {suggestions.length !== 0\n              ? suggestions[\"Places\"].map((suggestion) => {\n                  return (\n                    <option\n                      key={suggestion.PlaceId}\n                      value={suggestion.PlaceName}\n                    ></option>\n                  );\n                })\n              : \"\"}\n          </datalist> */}\n            <input\n              autoComplete=\"off\"\n              list=\"destinations\"\n              type=\"text\"\n              placeholder=\"DESTINATION\"\n              name=\"destination\"\n              value={trip.destination || \"\"}\n              onChange={onChangeHandler}\n            />\n            <datalist id=\"destinations\">\n              {suggestions.length !== 0\n                ? suggestions.map((suggestion) => {\n                    // Todo: Suggestions don't drop down when entire country entered\n                    return (\n                      <option\n                        key={suggestion.placeId}\n                        value={suggestion.destination}\n                      ></option>\n                    );\n                  })\n                : \"\"}\n            </datalist>\n            <input placeholder=\"DEPARTURE DATE\" />\n            <input placeholder=\"RETURN DATE\" />\n            <button className=\"booking__form-button\" onClick={onClickHandler}>\n              SEND IT\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default Booking;\n","/Users/torrencebrown/Projects/react_playground/flight-booking/src/api/flight-client.js",[],"/Users/torrencebrown/Projects/react_playground/flight-booking/src/components/Utility/AutoComplete/Autocomplete.js",["45"],"import React, { useState } from \"react\";\nimport \"./autocomplete.css\";\n\nconst Autocomplete = ({ id, suggestions }) => {\n  return (\n    <div className=\"autocomplete\">\n      <datalist id={id}></datalist>\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","/Users/torrencebrown/Projects/react_playground/flight-booking/src/api/endpoints.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":24,"column":19,"nodeType":"52","endLine":24,"endColumn":30},{"ruleId":"50","severity":1,"message":"56","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Autocomplete' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]